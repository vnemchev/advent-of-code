"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
function giantSquid(input) {
    var _a;
    var rows = input
        .split('\n')
        .filter(function (e) { return e !== ''; })
        .map(function (e) { return e.trim(); });
    var numbers = (_a = rows.shift()) === null || _a === void 0 ? void 0 : _a.split(',').map(Number);
    var boards = createBoards(rows);
    var a = playBingo(numbers, boards);
}
function findWinner(board) {
    var e_1, _a;
    try {
        for (var board_1 = __values(board), board_1_1 = board_1.next(); !board_1_1.done; board_1_1 = board_1.next()) {
            var row = board_1_1.value;
            var rowSum = row.reduce(function (sum, num) {
                var newSum = sum + num;
                return newSum;
            }, 0);
            if (rowSum === -5) {
                return 'Winner';
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (board_1_1 && !board_1_1.done && (_a = board_1.return)) _a.call(board_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    for (var i = 0; i < board.length; i++) {
        for (var j = 0; j < board[i].length; j++) {
        }
    }
    // return res;
}
function playBingo(numbers, boards) {
    var e_2, _a, e_3, _b;
    try {
        for (var numbers_1 = __values(numbers), numbers_1_1 = numbers_1.next(); !numbers_1_1.done; numbers_1_1 = numbers_1.next()) {
            var num = numbers_1_1.value;
            try {
                for (var boards_1 = (e_3 = void 0, __values(boards)), boards_1_1 = boards_1.next(); !boards_1_1.done; boards_1_1 = boards_1.next()) {
                    var board = boards_1_1.value;
                    console.log(findWinner(board));
                    for (var i = 0; i < board.length; i++) {
                        var row = board[i];
                        if (row.includes(num)) {
                            board[i][board[i].indexOf(num)] = -1;
                        }
                    }
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (boards_1_1 && !boards_1_1.done && (_b = boards_1.return)) _b.call(boards_1);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (numbers_1_1 && !numbers_1_1.done && (_a = numbers_1.return)) _a.call(numbers_1);
        }
        finally { if (e_2) throw e_2.error; }
    }
    return boards;
}
function createBoards(rows) {
    var pattern = /[0-9]{1,2}/g;
    var boards = [];
    var currentBoard = [];
    rows.forEach(function (row, i) {
        var _a;
        var numbers = (_a = row.match(pattern)) === null || _a === void 0 ? void 0 : _a.map(Number);
        if (!numbers)
            return;
        if (i === rows.length - 1) {
            currentBoard.push(numbers);
            return boards.push(currentBoard);
        }
        if (i !== 0 && i % 5 === 0) {
            boards.push(currentBoard);
            currentBoard = [];
        }
        currentBoard.push(numbers);
    });
    return boards;
}
// giantSquid(`7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1
// 22 13 17 11  0
//  8  2 23  4 24
// 21  9 14 16  7
//  6 10  3 18  5
//  1 12 20 15 19
//  3 15  0  2 22
//  9 18 13 17  5
// 19  8  7 25 23
// 20 11 10 24  4
// 14 21 16 12  6
// 14 21 17 24  4
// 10 16 15  9 19
// 18  8 23 26 20
// 22 11 13  6  5
//  2  0 12  3  7`);
giantSquid("27,14,70,7,85,66,65,57,68,23,33,78,4,84,25,18,43,71,76,61,34,82,93,74,26,15,83,64,2,35,19,97,32,47,6,51,99,20,77,75,56,73,80,86,55,36,13,95,52,63,79,72,9,10,16,8,69,11,50,54,81,22,45,1,12,88,44,17,62,0,96,94,31,90,39,92,37,40,5,98,24,38,46,21,30,49,41,87,91,60,48,29,59,89,3,42,58,53,67,28\n\n31 23 52 26  8\n27 89 37 80 46\n97 19 63 34 79\n13 59 45 12 73\n42 25 22  6 39\n\n27 71 24  3  0\n79 42 32 72 62\n99 52 11 92 33\n38 22 16 44 39\n35 26 76 49 58\n\n39 19 82 53 57\n52 98 69 77 23\n 1 40 18 66 83\n34 85 28 48 16\n15 93 38 96 27\n\n74 50 88 84 99\n34  2 11 25 17\n57  4 19 83  1\n59 77 42 36 33\n73 22 23 37 55\n\n98 91 56 84 78\n45 21 24 83 40\n46 58  8 67  4\n33 97 55  7 86\n 2 68 64 27 69\n\n68 29 14 49 26\n 4 21 87 71 32\n58  5 17 46 93\n45 96  8 83  2\n78 91  9 20 42\n\n49 81 19 48 37\n38 23 45 82 92\n93 99 67 66 42\n40 74 25 56 16\n21 47 26 75 61\n\n53 66 72 30 34\n55 82 77  6 92\n60 56  8 22 88\n 5 71 49 29 74\n28  2 32 84 73\n\n52 31 24 68 41\n48 82 19 29 65\n51 91 97 39 80\n 3 55 43 40 38\n20 89 53 45 75\n\n29 74 19 89 18\n32 88 93 46 63\n91  4 94 64  5\n57 54 49 36 40\n97 81 39 77  1\n\n 7 57 94 84 39\n92  3 28 15 75\n88 45 65 81 63\n86  4 89 37 71\n 8 13 66 42 85\n\n60 66 35 47 98\n96 27 40 51 39\n 3 64 25 28 74\n58 17 97 59 29\n95 31 18 44 37\n\n 3 31 97 85 71\n79 82 22 61 98\n87 14 17 66 75\n36 89 88 83 63\n44  8 81 25 48\n\n73 84 28 90 94\n25 19 44 10 23\n 8 59 17  9 93\n20 77 97 64  6\n98 82 27 70 91\n\n18 51 16 99  2\n58 22 89 13 19\n39 66 91  8 32\n49 24 85 94 42\n45 70 10 86  4\n\n23 81 66 13 34\n25 80 97  5 42\n79 35  2 78  9\n 0  6 91 94 45\n21 90 76 50 56\n\n50 92  2 96 75\n85 82 80 97 31\n61 35 55 27 56\n74 42  9 29 90\n86 15 88 47  1\n\n18 20 54 92 62\n45 22 32 61 75\n 1 38 50 81 42\n82  4 21 77 65\n27 51 56 39 48\n\n36 10 62 28 70\n94 99 34 54  6\n15  1 41 13 12\n92 52  2 63 82\n90 64 29 69 32\n\n23 77 33 90 17\n45 78  5 67 28\n57 73 89 81 21\n49 64 37 15 14\n 7 59  4 43 16\n\n81 92 25 28 90\n93 72 43 94 26\n24  9 13 74 10\n21  2 36 32 51\n87 97 55 86 71\n\n82 71 99 17 90\n69 95 65 55 10\n 9 92 39 62 78\n59 13 61 24 44\n 8 31 58  0 57\n\n17 83 55 99 27\n79  4 33 76  7\n81 43 44 49 72\n 2 48 97 20 77\n47 60 35 16 63\n\n93 95 94  1 98\n61 57 84 55 22\n85 40 65 46 59\n21 15 63 77  7\n13 99 49  3 96\n\n 8 21 14 45 41\n65 63 82 62 28\n91 44 22 79 96\n20 75 86  3 26\n74 11 42 59 36\n\n 5 52 43 92 99\n46 63 10 45 81\n13 66 21 32 89\n25 28 96 40 88\n27 18 31 73 34\n\n 3 26 43 32 36\n68 87 67 65 99\n73 61 20 90  7\n21 52  2 82 10\n58 49 56 16 80\n\n97 25 93 63 32\n87 14  5 22 76\n89 92 91  3 51\n 0 24 95 69 20\n96 11 10  1 55\n\n95 86 44 75 70\n59 76 45  2 99\n 1 34 71 81 41\n87 14 33 84 96\n 8 38  9 82 68\n\n27 71 70 75 76\n25 87  2 79 96\n20 88 50 37 32\n48 94 63 86 22\n15  6 34 78 59\n\n30 89 51 31 77\n74 10 86 71 84\n29 54 58 44  5\n11 90 26 50 63\n64 62 20 40 46\n\n37  9 46 23 31\n68 21 25 36 90\n17 33  6 50 30\n11 89 20 47 60\n26 59 34 62 77\n\n84 52 40 97  7\n88 30 42 58 94\n64 10  2 90 83\n44 35 77 91 47\n14 74  9 78 53\n\n86 14  0 39 24\n87 69 58  8 73\n88 74 27 40 51\n63 54 55 93 61\n16 66 15 21 48\n\n43 70  9 81 42\n36 54 99 34 95\n98 19 90 25 44\n69 56 18 77 49\n58 16 67 75 57\n\n36 44 14 98 23\n31  5 83 46  3\n45 21 41 11 60\n33 81 88 92 65\n13 51 48 59 71\n\n12  5 70 87 32\n42 18 90 73 88\n68 29 76 38 55\n67 62 15 77 34\n39 27 51 54 19\n\n87  8 92 93 88\n77 54 15  1 43\n35 97 26 21 29\n13 46 96 69 47\n51 38 91 32 63\n\n73 99 30 15 16\n42 58 21 88 44\n45 13 27 68  9\n36  6 81 53  5\n78 76 11 60  1\n\n57 76 50 78 31\n45 42 68 53 16\n 9 88 89 19 21\n96 61 97 69 34\n98 87 33 82  0\n\n 4 16 89 57 64\n46 75 77 65 23\n71 42 96 52 38\n 1 21 93  0 35\n59 80 53 36 58\n\n97 62 35  1 88\n98 60 17 45 94\n12 43 65 23 19\n71 52  3 40 59\n50 76 61 20 22\n\n92 65 38 93 13\n55 26 10 46 29\n85 23 19 74 34\n60 14 27 36 18\n53  4 52 49 17\n\n99 56 93 70 28\n25  0 77 80 57\n91 50 72 76 23\n53 58 95 78 59\n75 85 90 44  9\n\n30  8  5 60  6\n28 35 59 70 96\n20 99 98 81 79\n94 78 27 71  4\n 7 34 43 46 51\n\n93 65 22 69 33\n92 49 75 35 11\n58 39 62 86 83\n64  4 76 48 82\n74  1 56 95 31\n\n 1 78 98 90 55\n80 14 36 99  7\n85  8 10  9 92\n76 11 40 70 62\n43 53 74 35 58\n\n46 78 35 28 49\n84 73 65 25 34\n40 59 66 36 67\n16 22 29  0 45\n20 56 39 88 91\n\n32 58 35 25 79\n78 94 57 38 14\n89 87 68 48 76\n 7 67 40 51 33\n95 31 43 93 92\n\n38 21 82 31 23\n54 16 77 37 42\n73 99  7 34 90\n71 26  5 91 52\n22 27 47 85 62\n\n 2 86 28 37 55\n 1 82  9 36 31\n52 98 89 30 60\n13 17 63 38 57\n73 50 42 20 12\n\n56  3 67 62 35\n59 39 19 22 27\n21 58 57 41 54\n75 13 82 50 32\n23  5 99 66 10\n\n 7 19 45 66 78\n38 57 40 73 87\n58 30 99 53 83\n64  1  8 56 95\n70 77 16 18 82\n\n72 83 95 37 35\n54 59 92 21 79\n 7 81 86 29 41\n52 99 42 57 71\n 3 15 75 34 77\n\n 7 70  5 69  4\n34 60 40 73  6\n74 54 67 32 38\n93 62 17 51 86\n57 88 99  3 16\n\n42 74 11 34  7\n82 47 71 31 58\n69 23 43  4 64\n32 19 98 93 41\n63 97  8 85 48\n\n63 54 34 38 86\n 4 27 15 49  0\n61 77 53 98 74\n62 23 88 97 37\n93 28 25 50 13\n\n56 82 41 27 79\n23 31 64  7 65\n52 98 93 16 57\n88 49 10 11 62\n43 95 53 51 83\n\n41 10 87 54 86\n19 22 13 40 17\n37 27 45 29 63\n83 85 81 90  7\n57 88 47 66 56\n\n67 44 54 88 89\n20 46 61 28 92\n86 49 60 83 95\n42 78 97 51 96\n11 62  4 26 31\n\n18 68 87 26 70\n62 84 11 33 90\n 0 45 66 83  6\n20 19 27 44 55\n52  8  5  7  3\n\n54 94 88 76 92\n13 98 22 33 26\n95 62 53 81 24\n29 69 15 87 25\n61 40 84 90 93\n\n 7 31  3 28 46\n20 51 21 18 38\n30 92 39 70 61\n27 88 35 96 74\n23  5 66 11 42\n\n40 61 90 57 54\n41 14 99 62 59\n92 10 48 81 52\n22 29 77 18 87\n31 79 25 94 13\n\n17 26 44 98 57\n74 83 51 14 11\n76 91 96 64 33\n43 45 92 72 27\n66  3 28 20 40\n\n88 82 44 71 55\n83 47 51 76 24\n86 19 42 34 99\n30 31 87 48 62\n98 53 68  9 21\n\n 3 31  6 41 61\n24 77 81 96 44\n78 73  1 98 11\n40 80 27 65 92\n62 67  2 30 10\n\n78 46 50 65 56\n84 16 32 58 86\n22 12 54 99 35\n 9 43 55 10 94\n66 81 59 92 76\n\n78  3 55 23 83\n13 42 94 91 22\n14 37 31 67 71\n 8 61 57 34 43\n74 50  0 39 65\n\n78 16 13 91 34\n14 74 86  3 97\n12 89 58 65 51\n29 57 48 44 93\n95  1 42 39 92\n\n93 96 16 85 25\n59  3 70 19 17\n21 84 58 38 86\n57 10 35 95 79\n81 44 73 63  9\n\n22  1 96  7 93\n40 49  2  4 66\n87 21 17 32 48\n44 28 42 99 26\n69  8 85 86 75\n\n21 31 37 87 28\n89 43 74 83 57\n95 29 92 88 35\n94 25 97 81 50\n15 19 73 45 63\n\n92 62 67 95 57\n30  8  4 39 64\n99 31 70 63 96\n25 53 24 93 35\n34 51 82 91 28\n\n41 30 20 56 46\n16 32 98 60 35\n67  9 43 42 88\n78 90 71  5 29\n49 31 37 63 18\n\n80 40 88  5 62\n 3  6 74 71 97\n19 58 63 59 38\n50 64 34 68 45\n25 30 21 33 83\n\n10 65 67 17 50\n21 51 18 68 59\n29 78 77 99 76\n62 35 96  7 95\n82 53 42 49 69\n\n74 65 89  6  1\n18 30 72 75 24\n60 50 52 55 82\n68 99  4 61 22\n 9 37 84 57 87\n\n96 85 56 72  2\n 9 38 98 12  4\n34 45 74 97 86\n18 94 64 70 68\n91 41 58 39 66\n\n34 13 26 80 29\n 0  4 21 60 90\n39 73 12  2 19\n64 44 61 88 45\n59 50  8 91 49\n\n34 85 55  2 75\n10 15 89 12 63\n90 29 87 73 71\n38 17 84 45  9\n97 98 77 23 61\n\n47 43 22 58  1\n63 44  2 94 99\n33 81 51 49 13\n38 86 42 91 23\n 7 67 68 39 84\n\n 4 26 12 38 41\n43 16 88 71 99\n50 24 19 77 98\n23 73 44 10 51\n56 42 30 52 59\n\n57 16  9 62 27\n26 65 56 10 82\n 0 74 78 12 99\n77 18 38  5 37\n 7 60 40 90 23\n\n14 69 18 51  8\n21 79 60 36 12\n68 44 59 45 16\n90 50 85 25 70\n91 31 30 54 26\n\n24 40 51 72 63\n31 60 62 25 96\n 9 44 35 28 91\n97  4 34 81  2\n61 68 94 52 86\n\n 0 57 95 88 94\n36 38 25 35 19\n13  6  8 61 98\n45 85 86 69 97\n41 32  7 15 59\n\n41 82 19 29 34\n44 96  6 91 76\n69 21 32 94 98\n 4 10 88 30  2\n 8 74 56 65 99\n\n36 91 73 15 54\n62 55 40 27 44\n11 60 95 61 46\n31 32 21 41 35\n74 86 83 89 79\n\n 2 96 94 82 68\n39 83 49 30 15\n62 11 86 99 59\n51 80 12 72 58\n87 66 98 53 29\n\n44 71 18 63 85\n11 75 60 66 13\n36  9 94 57  8\n10 12 32  3 86\n 4 29 54 70 21\n\n27 33 76 83 67\n77 29 65 39 44\n52 34 25 93 64\n35  4 57 92 84\n41 51 88 96  0\n\n21 91 82  3 26\n23  8 36 20 73\n54 39 60 34 57\n49 99 97 69 43\n41 93 95 80 63\n\n73 77  4  9 22\n17 33 15 86 79\n38 16 99 98 30\n64 92 76 50 68\n83 85 52 87 88\n\n57 53 13 36 76\n 7 10 91  3 22\n 8 84 56 73 59\n62 80 85 38 33\n68 97 47 14 96\n\n36  8 98 43 70\n85 95 31  1 51\n33 41 78 89 56\n76 16 15 34 82\n12 18 39  4  3\n\n98 49 41 30 95\n68 89 81 48 84\n15 19 90 66 14\n32  1 88 34 64\n73 65  6 20 86\n\n22 18 13 74 34\n75  4 60 88 46\n25 97 54 94 91\n42 67 40 11 81\n 5 12 49 48 15\n\n82 91 18 73 57\n97 50 34 16 66\n29 43 81 20 15\n19 44 85  4 32\n90 58 39 53 42\n\n50 53 83 10  0\n93 16 84 23 13\n89 63 75 69 51\n65 35 67 56 70\n 4 37 29 47 38");
//# sourceMappingURL=giant-squid.js.map